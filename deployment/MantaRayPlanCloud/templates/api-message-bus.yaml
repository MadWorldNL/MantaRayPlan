apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.messageBus.deployment }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.api.messageBus.app }}
    name: {{ .Values.api.messageBus.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.api.messageBus.app }}
      task: {{ .Values.api.messageBus.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.api.messageBus.app }}
        task: {{ .Values.api.messageBus.name }}
    spec:
      containers:
        - name: {{ .Values.api.messageBus.app }}
          image: "{{ .Values.api.messageBus.image }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          env:
            - name: Database__Host
              value: "postgres-rw"
            - name: Database__Port
              value: "5432"
            - name: Database__DbName
              value: {{ .Values.database.dbName }}
            - name: Database__User
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret.name }}
                  key: username
            - name: Database__Password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret.name }}
                  key: password  
            - name: OpenTelemetry__LoggerEndpoint
              value: "{{ .Values.logging.seq.host.internal }}"
            - name: OpenTelemetry__LoggerApiKey
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.logging.seq.secrets.name }}
                  key: apiKeyMessageBus     
            - name: Kestrel__EndpointDefaults__Protocols
              value: "Http1AndHttp2"
            - name: MessageBus__Host
              value: {{ .Values.messageBus.loadBalancer }}
            - name: MessageBus__Username
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.messageBus.secret.name }}
                  key: username
            - name: MessageBus__Password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.messageBus.secret.name }}
                  key: password  
          ports:
            - containerPort: 8080