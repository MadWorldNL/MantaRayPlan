@using MadWorldNL.MantaRayPlan.Events
@using MadWorldNL.MantaRayPlan.Web.Services.Events
@using MadWorldNL.MantaRayPlan.Web.Services.MessageBuses
@page "/MessageBus"

@inject IMessageBusService MessageBusService;
@inject EventsService EventsService

<h1>Message Bus Test Page</h1>
@if (_isLoaded)
{
    <p>status counter: @_counter</p>
    <p>
        <button @onclick="UpdateStatus">
            Set new status
        </button>
    </p>
}

@code {
    private bool _isLoaded;
    private int _counter;

    protected override async Task OnInitializedAsync()
    {
        var status = await MessageBusService.GetStatusAsync();
        _counter = status.counter;
        _isLoaded = true;

        EventsService.EventReceived += NewEventReceived;
        
        await EventsService.StartAsync();
        await base.OnInitializedAsync();
    }

    private void NewEventReceived(MessageBusStatusEvent @event)
    {
        _counter = @event.Count;
        StateHasChanged();
    }

    private async Task UpdateStatus()
    {
        await MessageBusService.PostNewStatusAsync();
    }
}